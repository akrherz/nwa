"""Generate a shapefile of warnings generated by workshop folks."""

from datetime import datetime, timezone

import click
import geopandas as gpd
from pyiem.database import get_sqlalchemy_conn, sql_helper
from pyiem.util import logger

LOG = logger()


@click.command()
@click.option(
    "--sts",
    required=True,
    type=click.DateTime(),
    help="Start of the period UTC",
)
@click.option(
    "--ets", required=True, type=click.DateTime(), help="End of the period UTC"
)
@click.option("--label", required=True, help="Label for the shapefile")
def main(sts: datetime, ets: datetime, label: str):
    """Go!"""
    sts = sts.replace(tzinfo=timezone.utc)
    ets = ets.replace(tzinfo=timezone.utc)
    with get_sqlalchemy_conn("nwa") as conn:
        df = gpd.read_postgis(
            sql_helper("""
            SELECT
            to_char(issue at time zone 'UTC',
                    'YYYY-MM-DDThh24:MI:SSZ') as utc_issue,
            to_char(expire at time zone 'UTC',
                    'YYYY-MM-DDThh24:MI:SSZ') as utc_expire, geom,
            case when emergency then 'T' else 'F' end as emergency, team
            from nwa_warnings
            WHERE issue >= :sts and issue < :ets
        """),
            conn,
            params={"sts": sts, "ets": ets},
            geom_col="geom",
        )  # type: ignore
    if df.empty:
        LOG.info("No data found, aborting.")
        return
    fn = f"{label}_{sts.year}.shp"
    df.to_file(fn)
    print(f"Wrote {len(df.index)} records to {fn}")


if __name__ == "__main__":
    main()
